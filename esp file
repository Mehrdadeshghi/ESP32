#include <WiFi.h>
#include <HTTPClient.h>

// WLAN-Zugangsdaten
const char* ssid = "XXXXXX";       // Dein WLAN-Name
const char* password = "XXXXXXXX"; // Dein WLAN-Passwort

// Server URL (Angepasst für deine IP-Adresse)
const char* serverName = "http://XXXXXXX/insert.php";

// GPIO-Pin für den PIR-Sensor
const int pirPin = 13; // GPIO Pin, an dem der PIR-Sensor angeschlossen ist

// Timer zur Vermeidung mehrfacher Auslösungen
unsigned long lastTriggerTime = 0;
const unsigned long triggerDelay = 10000; // 10 Sekunden Verzögerung zwischen den Auslösungen

void setup() {
  Serial.begin(115200);
  
  // WLAN-Verbindung herstellen
  WiFi.begin(ssid, password);
  Serial.print("Verbinde mit WiFi ..");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println();
  Serial.println("Verbunden mit WiFi. IP-Adresse: ");
  Serial.println(WiFi.localIP());

  // GPIO-Pin für PIR-Sensor als Eingang festlegen
  pinMode(pirPin, INPUT);
}

void loop() {
  // Bewegungsstatus abfragen
  int motionDetected = digitalRead(pirPin);
  
  // Wenn Bewegung erkannt wurde und der Trigger-Delay abgelaufen ist
  if (motionDetected == HIGH && (millis() - lastTriggerTime) > triggerDelay) {
    Serial.println("Bewegung erkannt!");
    lastTriggerTime = millis();
    
    // Daten an den Server senden
    if (WiFi.status() == WL_CONNECTED) {
      HTTPClient http;
      http.begin(serverName); // Verbindet sich mit dem Server unter der angegebenen IP
      http.addHeader("Content-Type", "application/x-www-form-urlencoded");

      // POST-Daten (Bewegung und Zeitstempel)
      String postData = "motion=1";  // Du kannst hier zusätzliche Parameter hinzufügen, wenn nötig

      // HTTP POST senden
      int httpResponseCode = http.POST(postData);
      if (httpResponseCode > 0) {
        String response = http.getString();
        Serial.println(httpResponseCode);  // Antwortcode anzeigen
        Serial.println(response);          // Serverantwort anzeigen
      } else {
        Serial.print("Fehler beim Senden: ");
        Serial.println(httpResponseCode);  // Zeigt den Fehlercode an
      }
      http.end(); // HTTP-Verbindung beenden
    } else {
      Serial.println("WLAN-Verbindung verloren");
    }
  }

  delay(500); // Kurze Verzögerung zwischen den Abfragen
}
